Description: Deploys a VPC w/ 1 to 3 public subnets (one per az), 1 to 3 private subnets (one per az), a Nat gateway, and an internet gateway. The subnets are tagged for use by EKS (alb ingress controller). To control the number of public or private subnets, remove the subnets (starting with 3 then 2). Will create at least one subnet.

Parameters:
  BYOVPC:
    Type: String
    Default: "false"
    AllowedValues:
      - "true"
      - "false"
    Description: "Use a VPC you already have, instead of creating a new one"

  VPCID:
    Type: AWS::EC2::VPC::Id
    Description: "If using your own VPC, select the VPC you want to use"

  PublicSubnet1Id:
    Type: AWS::EC2::Subnet::Id
    Description: "If using your own VPC, select the first public subnet"

  PublicSubnet2Id:
    Type: AWS::EC2::Subnet::Id
    Description: "If using your own VPC, select the second public subnet (optional)"
    Default: ""

  PublicSubnet3Id:
    Type: AWS::EC2::Subnet::Id
    Description: "If using your own VPC, select the third public subnet (optional)"
    Default: ""

  PrivateSubnet1Id:
    Type: AWS::EC2::Subnet::Id
    Description: "If using your own VPC, select the first private subnet"

  PrivateSubnet2Id:
    Type: AWS::EC2::Subnet::Id
    Description: "If using your own VPC, select the second private subnet (optional)"
    Default: ""

  PrivateSubnet3Id:
    Type: AWS::EC2::Subnet::Id
    Description: "If using your own VPC, select the third private subnet (optional)"
    Default: ""

  RunnerSubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: "If using your own VPC, provide the subnet ID for the runner subnet"

  ClusterName:
    Description: The name for the EKS Cluster that will be deployed on this VPC.
    Type: String

  NuonInstallID:
    Description: The Nuon Install ID; prefixed to resource names.
    Type: String

  NuonOrgID:
    Description: The Nuon Org ID. Used in tags.
    Type: String

  NuonAppID:
    Description: The Nuon Install ID. Used in tags.
    Type: String

  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC.
    Type: String
    Default: 10.128.0.0/16

  PublicSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
    Type: String
    Default: 10.128.0.0/26

  PublicSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone
    Type: String
    Default: 10.128.0.64/26

  PublicSubnet3CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the third Availability Zone
    Type: String
    Default: 10.128.0.128/26

  # a dedicated private subnet for the runner
  RunnerSubnetCIDR:
    Description: Please enter the IP range (CIDR notation) for the dedicated private subnet for the runner.
    Type: String
    Default: 10.128.128.0/24

  PrivateSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
    Type: String
    Default: 10.128.130.0/24

  PrivateSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone
    Type: String
    Default: 10.128.132.0/24

  PrivateSubnet3CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the third Availability Zone
    Type: String
    Default: 10.128.134.0/24

Conditions:
  CreateVPC: !Equals [!Ref BYOVPC, "false"]
  CreatePublicSubnet2: !Not [!Equals ["", !Ref "PublicSubnet2CIDR"]]
  CreatePublicSubnet3: !Not [!Equals ["", !Ref "PublicSubnet3CIDR"]]
  CreateThreePublicSubnets: !And
    - !Condition CreatePublicSubnet2
    - !Condition CreatePublicSubnet3
  CreateTwoPublicSubnets: !And
    - !Condition CreatePublicSubnet2
    - !Not [!Condition CreatePublicSubnet3]
  CreateOnePublicSubnets: !And
    - !Not [!Condition CreatePublicSubnet2]
    - !Not [!Condition CreatePublicSubnet3]

  CreatePrivateSubnet2: !Not [!Equals ["", !Ref "PrivateSubnet2CIDR"]]
  CreatePrivateSubnet3: !Not [!Equals ["", !Ref "PrivateSubnet3CIDR"]]
  CreateThreePrivateSubnets: !And
    - !Condition CreatePrivateSubnet2
    - !Condition CreatePrivateSubnet3
  CreateTwoPrivateSubnets: !And
    - !Condition CreatePrivateSubnet2
    - !Not [!Condition CreatePrivateSubnet3]
  CreateOnePrivateSubnets: !And
    - !Not [!Condition CreatePrivateSubnet2]
    - !Not [!Condition CreatePrivateSubnet3]

  # Conditions for existing VPC subnet usage
  UsePublicSubnet2: !Not [!Equals [!Ref PublicSubnet2Id, ""]]
  UsePublicSubnet3: !Not [!Equals [!Ref PublicSubnet3Id, ""]]
  UsePrivateSubnet2: !Not [!Equals [!Ref PrivateSubnet2Id, ""]]
  UsePrivateSubnet3: !Not [!Equals [!Ref PrivateSubnet3Id, ""]]

  UseThreePublicSubnets: !And
    - !Condition UsePublicSubnet2
    - !Condition UsePublicSubnet3
  UseTwoPublicSubnets: !And
    - !Condition UsePublicSubnet2
    - !Not [!Condition UsePublicSubnet3]
  UseOnePublicSubnets: !And
    - !Not [!Condition UsePublicSubnet2]
    - !Not [!Condition UsePublicSubnet3]

  UseThreePrivateSubnets: !And
    - !Condition UsePrivateSubnet2
    - !Condition UsePrivateSubnet3
  UseTwoPrivateSubnets: !And
    - !Condition UsePrivateSubnet2
    - !Not [!Condition UsePrivateSubnet3]
  UseOnePrivateSubnets: !And
    - !Not [!Condition UsePrivateSubnet2]
    - !Not [!Condition UsePrivateSubnet3]

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Condition: CreateVPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref NuonInstallID
        - Key: "install.nuon.co/id"
          Value: !Ref NuonInstallID
        - Key: "org.nuon.co/id"
          Value: !Ref NuonOrgID
        - Key: "app.nuon.co/id"
          Value: !Ref NuonAppID

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Condition: CreateVPC
    Properties:
      Tags:
        - Key: Name
          Value: !Ref NuonInstallID
        - Key: "install.nuon.co/id"
          Value: !Ref NuonInstallID
        - Key: "org.nuon.co/id"
          Value: !Ref NuonOrgID
        - Key: "app.nuon.co/id"
          Value: !Ref NuonAppID

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Condition: CreateVPC
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Condition: CreateVPC
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${NuonInstallID}-public-subnet-az1
        - Key: "install.nuon.co/id"
          Value: !Ref NuonInstallID
        - Key: "org.nuon.co/id"
          Value: !Ref NuonOrgID
        - Key: "app.nuon.co/id"
          Value: !Ref NuonAppID
        - Key: "kubernetes.io/role/elb"
          Value: 1
        - Key: "network.nuon.co/domain"
          Value: "public"
        - Key: "visibility"
          Value: "public"

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Condition: !And [CreateVPC, CreatePublicSubnet2]
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${NuonInstallID}-public-subnet-az2
        - Key: "install.nuon.co/id"
          Value: !Ref NuonInstallID
        - Key: "org.nuon.co/id"
          Value: !Ref NuonOrgID
        - Key: "app.nuon.co/id"
          Value: !Ref NuonAppID
        - Key: "kubernetes.io/role/elb"
          Value: 1
        - Key: "network.nuon.co/domain"
          Value: "public"
        - Key: "visibility"
          Value: "public"

  PublicSubnet3:
    Type: AWS::EC2::Subnet
    Condition: !And [CreateVPC, CreatePublicSubnet3]
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [2, !GetAZs ""]
      CidrBlock: !Ref PublicSubnet3CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${NuonInstallID}-public-subnet-az3
        - Key: "install.nuon.co/id"
          Value: !Ref NuonInstallID
        - Key: "org.nuon.co/id"
          Value: !Ref NuonOrgID
        - Key: "app.nuon.co/id"
          Value: !Ref NuonAppID
        - Key: "kubernetes.io/role/elb"
          Value: 1
        - Key: "network.nuon.co/domain"
          Value: "public"
        - Key: "visibility"
          Value: "public"

  RunnerSubnet:
    Type: AWS::EC2::Subnet
    Condition: CreateVPC
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref RunnerSubnetCIDR
      Tags:
        - Key: Name
          Value: !Sub ${NuonInstallID}-private-runner-subnet-az1
        - Key: "install.nuon.co/id"
          Value: !Ref NuonInstallID
        - Key: "org.nuon.co/id"
          Value: !Ref NuonOrgID
        - Key: "app.nuon.co/id"
          Value: !Ref NuonAppID
        - Key: "network.nuon.co/domain"
          Value: "runner"
        - Key: "visibility"
          Value: "private"

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Condition: CreateVPC
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref PrivateSubnet1CIDR
      Tags:
        - Key: Name
          Value: !Sub ${NuonInstallID}-private-subnet-az1
        - Key: "install.nuon.co/id"
          Value: !Ref NuonInstallID
        - Key: "org.nuon.co/id"
          Value: !Ref NuonOrgID
        - Key: "app.nuon.co/id"
          Value: !Ref NuonAppID
        - Key: "kubernetes.io/role/internal-elb"
          Value: 1
        - Key: "network.nuon.co/domain"
          Value: "internal"
        - Key: "visibility"
          Value: "private"

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Condition: !And [CreateVPC, CreatePrivateSubnet2]
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Ref PrivateSubnet2CIDR
      Tags:
        - Key: Name
          Value: !Sub ${NuonInstallID}-private-subnet-az2
        - Key: "install.nuon.co/id"
          Value: !Ref NuonInstallID
        - Key: "org.nuon.co/id"
          Value: !Ref NuonOrgID
        - Key: "app.nuon.co/id"
          Value: !Ref NuonAppID
        - Key: "kubernetes.io/role/internal-elb"
          Value: 1
        - Key: "network.nuon.co/domain"
          Value: "internal"
        - Key: "visibility"
          Value: "private"

  PrivateSubnet3:
    Type: AWS::EC2::Subnet
    Condition: !And [CreateVPC, CreatePrivateSubnet3]
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [2, !GetAZs ""]
      CidrBlock: !Ref PrivateSubnet3CIDR
      Tags:
        - Key: Name
          Value: !Sub ${NuonInstallID}-private-subnet-az3
        - Key: "install.nuon.co/id"
          Value: !Ref NuonInstallID
        - Key: "org.nuon.co/id"
          Value: !Ref NuonOrgID
        - Key: "app.nuon.co/id"
          Value: !Ref NuonAppID
        - Key: "kubernetes.io/role/internal-elb"
          Value: 1
        - Key: "network.nuon.co/domain"
          Value: "internal"
        - Key: "visibility"
          Value: "private"

  # NAT Gateway
  NatGatewayEIP:
    Type: AWS::EC2::EIP
    Condition: CreateVPC
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: "install.nuon.co/id"
          Value: !Ref NuonInstallID
        - Key: "org.nuon.co/id"
          Value: !Ref NuonOrgID
        - Key: "app.nuon.co/id"
          Value: !Ref NuonAppID

  NatGateway:
    Type: AWS::EC2::NatGateway
    Condition: CreateVPC
    Properties:
      AllocationId: !GetAtt NatGatewayEIP.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: "Name"
          Value: !Ref NuonInstallID
        - Key: "install.nuon.co/id"
          Value: !Ref NuonInstallID
        - Key: "org.nuon.co/id"
          Value: !Ref NuonOrgID
        - Key: "app.nuon.co/id"
          Value: !Ref NuonAppID

  # Route Tables: Public
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Condition: CreateVPC
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${NuonInstallID}-public
        - Key: "install.nuon.co/id"
          Value: !Ref NuonInstallID
        - Key: "org.nuon.co/id"
          Value: !Ref NuonOrgID
        - Key: "app.nuon.co/id"
          Value: !Ref NuonAppID

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    Condition: CreateVPC
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: CreateVPC
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: !And [CreateVPC, CreatePublicSubnet2]
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  PublicSubnet3RouteTableAssociation:
    Condition: !And [CreateVPC, CreatePublicSubnet3]
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet3

  # Route Tables: Private
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Condition: CreateVPC
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${NuonInstallID}-private
        - Key: "install.nuon.co/id"
          Value: !Ref NuonInstallID
        - Key: "org.nuon.co/id"
          Value: !Ref NuonOrgID
        - Key: "app.nuon.co/id"
          Value: !Ref NuonAppID

  DefaultPrivateRoute:
    Type: AWS::EC2::Route
    Condition: CreateVPC
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  RunnerSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: CreateVPC
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref RunnerSubnet

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: CreateVPC
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet1

  PrivateSubnet2RouteTableAssociation:
    Condition: !And [CreateVPC, CreatePrivateSubnet2]
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet2

  PrivateSubnet3RouteTableAssociation:
    Condition: !And [CreateVPC, CreatePrivateSubnet3]
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet3

Outputs:
  VPC:
    Description: The VPC.
    Value: !If [CreateVPC, !Ref VPC, !Ref VPCID]

  PublicSubnets:
    Description: A list of the public subnets.
    Value: !If
      - CreateVPC
      - !If
        - CreateThreePublicSubnets
        - !Join [
            ",",
            [!Ref PublicSubnet1, !Ref PublicSubnet2, !Ref PublicSubnet3],
          ]
        - !If
          - CreateTwoPublicSubnets
          - !Join [",", [!Ref PublicSubnet1, !Ref PublicSubnet2]]
          - !Join [",", [!Ref PublicSubnet1]]
      - !If
        - UseThreePublicSubnets
        - !Join [",", [!Ref PublicSubnet1Id, !Ref PublicSubnet2Id, !Ref PublicSubnet3Id]]
        - !If
          - UseTwoPublicSubnets
          - !Join [",", [!Ref PublicSubnet1Id, !Ref PublicSubnet2Id]]
          - !Join [",", [!Ref PublicSubnet1Id]]

  PrivateSubnets:
    Description: A list of the private subnets.
    Value: !If
      - CreateVPC
      - !If
        - CreateThreePrivateSubnets
        - !Join [
            ",",
            [!Ref PrivateSubnet1, !Ref PrivateSubnet2, !Ref PrivateSubnet3],
          ]
        - !If
          - CreateTwoPrivateSubnets
          - !Join [",", [!Ref PrivateSubnet1, !Ref PrivateSubnet2]]
          - !Join [",", [!Ref PrivateSubnet1]]
      - !If
        - UseThreePrivateSubnets
        - !Join [",", [!Ref PrivateSubnet1Id, !Ref PrivateSubnet2Id, !Ref PrivateSubnet3Id]]
        - !If
          - UseTwoPrivateSubnets
          - !Join [",", [!Ref PrivateSubnet1Id, !Ref PrivateSubnet2Id]]
          - !Join [",", [!Ref PrivateSubnet1Id]]

  RunnerSubnet:
    Description: The dedicated private subnet for the runner.
    Value: !If [CreateVPC, !Ref RunnerSubnet, !Ref RunnerSubnetId]
