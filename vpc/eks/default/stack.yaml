Description: Deploys a VPC w/ 1 to 3 public subnets (one per az), 1 to 3 private subnets (one per az), a Nat gateway, and an internet gateway. The subnets are tagged for use by EKS (alb ingress controller). To control the number of public or private subnets, remove the subnets (starting with 3 then 2). Will create at least one subnet.

Parameters:
  ClusterName:
    Description: The name for the EKS Cluster that will be deployed on this VPC.
    Type: String

  NuonInstallID:
    Description: The Nuon Install ID; prefixed to resource names.
    Type: String

  NuonOrgID:
    Description: The Nuon Org ID. Used in tags.
    Type: String

  NuonAppID:
    Description: The Nuon Install ID. Used in tags.
    Type: String

  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC.
    Type: String
    Default: 10.128.0.0/16

  PublicSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
    Type: String
    Default: 10.128.0.0/26

  PublicSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone
    Type: String
    Default: 10.128.0.64/26

  PublicSubnet3CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the third Availability Zone
    Type: String
    Default: 10.128.0.128/26

  # a dedicated private subnet for the runner
  RunnerSubnetCIDR:
    Description: Please enter the IP range (CIDR notation) for the dedicated private subnet for the runner.
    Type: String
    Default: 10.128.128.0/24

  PrivateSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
    Type: String
    Default: 10.128.130.0/24

  PrivateSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone
    Type: String
    Default: 10.128.132.0/24

  PrivateSubnet3CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the third Availability Zone
    Type: String
    Default: 10.128.134.0/24

Conditions:
  CreatePublicSubnet2: !Not [!Equals ["", !Ref "PublicSubnet2CIDR"]]
  CreatePublicSubnet3: !Not [!Equals ["", !Ref "PublicSubnet3CIDR"]]
  CreateThreePublicSubnets: !And
    - !Condition CreatePublicSubnet2
    - !Condition CreatePublicSubnet3
  CreateTwoPublicSubnets: !And
    - !Condition CreatePublicSubnet2
    - !Not [!Condition CreatePublicSubnet3]
  CreateOnePublicSubnets: !And
    - !Not [!Condition CreatePublicSubnet2]
    - !Not [!Condition CreatePublicSubnet3]

  CreatePrivateSubnet2: !Not [!Equals ["", !Ref "PrivateSubnet2CIDR"]]
  CreatePrivateSubnet3: !Not [!Equals ["", !Ref "PrivateSubnet3CIDR"]]
  CreateThreePrivateSubnets: !And
    - !Condition CreatePrivateSubnet2
    - !Condition CreatePrivateSubnet3
  CreateTwoPrivateSubnets: !And
    - !Condition CreatePrivateSubnet2
    - !Not [!Condition CreatePrivateSubnet3]
  CreateOnePrivateSubnets: !And
    - !Not [!Condition CreatePrivateSubnet2]
    - !Not [!Condition CreatePrivateSubnet3]

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref NuonInstallID
        - Key: "install.nuon.co/id"
          Value: !Ref NuonInstallID
        - Key: "org.nuon.co/id"
          Value: !Ref NuonOrgID
        - Key: "app.nuon.co/id"
          Value: !Ref NuonAppID

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref NuonInstallID
        - Key: "install.nuon.co/id"
          Value: !Ref NuonInstallID
        - Key: "org.nuon.co/id"
          Value: !Ref NuonOrgID
        - Key: "app.nuon.co/id"
          Value: !Ref NuonAppID

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${NuonInstallID}-public-subnet-az1
        - Key: "install.nuon.co/id"
          Value: !Ref NuonInstallID
        - Key: "org.nuon.co/id"
          Value: !Ref NuonOrgID
        - Key: "app.nuon.co/id"
          Value: !Ref NuonAppID
        - Key: !Sub kubernetes.io/cluster/${ClusterName}
          Value: shared
        - Key: "kubernetes.io/role/elb"
          Value: 1
        - Key: "visibility"
          Value: "public"

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Condition: CreatePublicSubnet2
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${NuonInstallID}-public-subnet-az2
        - Key: "install.nuon.co/id"
          Value: !Ref NuonInstallID
        - Key: "org.nuon.co/id"
          Value: !Ref NuonOrgID
        - Key: "app.nuon.co/id"
          Value: !Ref NuonAppID
        - Key: !Sub kubernetes.io/cluster/${ClusterName}
          Value: shared
        - Key: "kubernetes.io/role/elb"
          Value: 1
        - Key: "visibility"
          Value: "public"

  PublicSubnet3:
    Type: AWS::EC2::Subnet
    Condition: CreatePublicSubnet3
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 2, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet3CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${NuonInstallID}-public-subnet-az3
        - Key: "install.nuon.co/id"
          Value: !Ref NuonInstallID
        - Key: "org.nuon.co/id"
          Value: !Ref NuonOrgID
        - Key: "app.nuon.co/id"
          Value: !Ref NuonAppID
        - Key: !Sub kubernetes.io/cluster/${ClusterName}
          Value: shared
        - Key: "kubernetes.io/role/elb"
          Value: 1
        - Key: "visibility"
          Value: "public"

  RunnerSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref RunnerSubnetCIDR
      Tags:
        - Key: Name
          Value: !Sub ${NuonInstallID}-private-runner-subnet-az1
        - Key: "install.nuon.co/id"
          Value: !Ref NuonInstallID
        - Key: "org.nuon.co/id"
          Value: !Ref NuonOrgID
        - Key: "app.nuon.co/id"
          Value: !Ref NuonAppID
        - Key: "visibility"
          Value: "private"

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PrivateSubnet1CIDR
      Tags:
        - Key: Name
          Value: !Sub ${NuonInstallID}-private-subnet-az1
        - Key: "install.nuon.co/id"
          Value: !Ref NuonInstallID
        - Key: "org.nuon.co/id"
          Value: !Ref NuonOrgID
        - Key: "app.nuon.co/id"
          Value: !Ref NuonAppID
        - Key: !Sub kubernetes.io/cluster/${ClusterName}
          Value: shared
        - Key: "kubernetes.io/role/internal-elb"
          Value: 1
        - Key: "visibility"
          Value: "private"

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Condition: CreatePrivateSubnet2
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Ref PrivateSubnet2CIDR
      Tags:
        - Key: Name
          Value: !Sub ${NuonInstallID}-private-subnet-az2
        - Key: "install.nuon.co/id"
          Value: !Ref NuonInstallID
        - Key: "org.nuon.co/id"
          Value: !Ref NuonOrgID
        - Key: "app.nuon.co/id"
          Value: !Ref NuonAppID
        - Key: !Sub kubernetes.io/cluster/${ClusterName}
          Value: shared
        - Key: "kubernetes.io/role/internal-elb"
          Value: 1
        - Key: "visibility"
          Value: "private"

  PrivateSubnet3:
    Type: AWS::EC2::Subnet
    Condition: CreatePrivateSubnet3
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 2, !GetAZs '' ]
      CidrBlock: !Ref PrivateSubnet3CIDR
      Tags:
        - Key: Name
          Value: !Sub ${NuonInstallID}-private-subnet-az3
        - Key: "install.nuon.co/id"
          Value: !Ref NuonInstallID
        - Key: "org.nuon.co/id"
          Value: !Ref NuonOrgID
        - Key: "app.nuon.co/id"
          Value: !Ref NuonAppID
        - Key: !Sub kubernetes.io/cluster/${ClusterName}
          Value: shared
        - Key: "kubernetes.io/role/internal-elb"
          Value: 1
        - Key: "visibility"
          Value: "private"

  # NAT Gateway
  NatGatewayEIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: "install.nuon.co/id"
          Value: !Ref NuonInstallID
        - Key: "org.nuon.co/id"
          Value: !Ref NuonOrgID
        - Key: "app.nuon.co/id"
          Value: !Ref NuonAppID

  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayEIP.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: "Name"
          Value: !Ref NuonInstallID
        - Key: "install.nuon.co/id"
          Value: !Ref NuonInstallID
        - Key: "org.nuon.co/id"
          Value: !Ref NuonOrgID
        - Key: "app.nuon.co/id"
          Value: !Ref NuonAppID

  # Route Tables: Public
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${NuonInstallID}-public
        - Key: "install.nuon.co/id"
          Value: !Ref NuonInstallID
        - Key: "org.nuon.co/id"
          Value: !Ref NuonOrgID
        - Key: "app.nuon.co/id"
          Value: !Ref NuonAppID

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: CreatePublicSubnet2
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  PublicSubnet3RouteTableAssociation:
    Condition: CreatePublicSubnet3
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet3

  # Route Tables: Private
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${NuonInstallID}-private
        - Key: "install.nuon.co/id"
          Value: !Ref NuonInstallID
        - Key: "org.nuon.co/id"
          Value: !Ref NuonOrgID
        - Key: "app.nuon.co/id"
          Value: !Ref NuonAppID

  DefaultPrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  RunnerSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref RunnerSubnet

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet1

  PrivateSubnet2RouteTableAssociation:
    Condition: CreatePrivateSubnet2
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet2

  PrivateSubnet3RouteTableAssociation:
    Condition: CreatePrivateSubnet3
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet3

Outputs:
  VPC:
    Description: The VPC.
    Value: !Ref VPC

  PublicSubnets:
    Description: A list of the public subnets.
    Condition: CreateOnePublicSubnets
    Value: !Join [ ",", [ !Ref PublicSubnet1 ]]
    Condition: CreateTwoPublicSubnets
    Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]
    Condition: CreateThreePublicSubnets
    Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2, !Ref PublicSubnet3 ]]

  PrivateSubnets:
    Description: A list of the private subnets.
    Condition: CreateOnePrivateSubnets
    Value: !Join [ ",", [ !Ref PrivateSubnet1 ]]
    Condition: CreateTwoPrivateSubnets
    Value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ]]
    Condition: CreateThreePrivateSubnets
    Value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2, !Ref PrivateSubnet3 ]]

  RunnerSubnet:
    Description: The dedicated private subnet for the runner.
    Value: !Ref RunnerSubnet
